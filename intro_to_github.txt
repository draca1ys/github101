Notes from GitHub for Dummies

(Guthals, S., Haack, P. (2019).GitHub for Dummies. Wiley.)

#Introduction of GitHub as Source Control Management (SCM)
The basic workflow of coding with version control system 
1. Create a project, typically in a folder on your computer.
2. Tell your version control system to track the changes of your project/folder.
3. Each time your project is in a working state, or you're going to walk away from it, tell your version control system to save it as the next version. 
4. If you ever need to go back to a previous version, you can ask your version control system to revert to whichever previous version you need. 

GitHub is built on Git. Git is a type of version control system, and it is free and open source. 
If you're using Mac or Linux, a terminal is on already. But if it's a pc, install Git for Windows. 
https://gitforwindows.org, where you can download Git Bash, an emulator that allows you to interact with Git like Linux or Mac terminal. 

Git Branching
Branching is a Git function that essentially copies code, allows you to make changes on a specific copy, and then merges your changes back in to the main (master) branch.

A list of core Git features that GitHub supports:
* Repository: Each repository contains all the files and folders related to your project and gives you control of permissions and collaborators' interaction with your code.
* Clone: When you want to make changes to your code, you will often want to create a copy, or clone of the project on your local computer. 
* Fork: Forking a project is when you create your own copy of the entire project. When you fork a project, GitHub.com creates a new repository with your copy of all the files. You can still suggest changes back to the original copy, but you can also take your version and go in a new direction.
* Branches: GitHub.com supports branching and even provides a useful tool -pull requests - to compare the diff between branches and merge branches. 
* Commits: GitHub.com tracks all the commits that you push to its servers and gives you an easy interface for browsing the code at different branches and different commits. 

More and more companies care more about your portfolio than a list of degrees or awards. 

GitHub allows you to link multiple email addresses to your account. Notice that you can add email addresses, keep your email address private, and even block Git commands that may expose your email address. 

SSH and GPG keys
At some point, you may want to create an SSH or GPG key to encrypt your communication with GitHub and ensure a secure environment.

Organizations
Organizations enable you to put GitHub users and repositories under similar settings. For example, you can grant admin rights to all repositories in an organization to the entire organization, instead of having to individually add each person to each repository. 
https://docs.github.com/en/organizations/collaborating-with-groups-in-organizations/about-organizations
organization roles: owners, members, moderators, billing managers, security managers

The amount and frequency at which you write code is not the bar by which software development is measured. It is true that the more you practice, the better you will be, but the practice you do must be deliberate. 

